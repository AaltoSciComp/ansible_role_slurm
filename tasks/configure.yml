---

- name: Copy munge key
  ansible.builtin.copy:
    src: '{{ slurm_mungekey_path }}'
    dest: '/etc/munge/munge.key'
    owner: munge
    group: munge
    mode: '0400'

- name: Template .my.cnf for root
  ansible.builtin.template:
    src: 'root.my.cnf.j2'
    dest: '/root/.my.cnf'
    owner: root
    group: root
    mode: 0600
  when: "'slurmdbd' in slurm_host_roles"

- name: Template my.cnf
  ansible.builtin.template:
    src: 'server.cnf.j2'
    dest: '/etc/my.cnf.d/server.cnf'
    owner: root
    group: root
    mode: 0644
    backup: true
  when: "'slurmdbd' in slurm_host_roles"
  notify:
    - Restart mysql

- name: Template slurmdbd.conf
  ansible.builtin.template:
    src: '{{ slurm_slurmdbd_conf_template }}'
    dest: /etc/slurm/slurmdbd.conf
    owner: slurm
    group: slurm
    mode: 0600
    backup: true
  when: "'slurmdbd' in slurm_host_roles"
  notify:
    - Restart munge
    - Restart slurmdbd
    - Restart slurmctld

- name: Template slurm.conf
  ansible.builtin.template:
    src: '{{ slurm_slurm_conf_template }}'
    dest: /etc/slurm/slurm.conf
    owner: root
    group: root
    mode: 0644
    backup: true
  when: "'slurmctld' in slurm_host_roles"
  notify:
    - Restart munge
    - Restart slurmdbd
    - Restart slurmctld
    - Restart slurmd

- name: Template epilog script
  ansible.builtin.template:
    src: '{{ slurm_epilog_script }}'
    dest: /usr/bin/epilog
    owner: root
    group: root
    mode: 0755
  when: "'compute' in slurm_host_roles"

- name: Create prolog/epilog-directories
  ansible.builtin.file:
    path: '{{ item }}'
    owner: root
    group: root
    mode: 0755
    state: directory
  loop:
    - /usr/local/libexec/slurm/prolog.d/
    - /usr/local/libexec/slurm/epilog.d/

- name: Template prolog files
  ansible.builtin.template:
    src: '{{ item }}'
    dest: "/usr/local/libexec/slurm/prolog.d/{{ item | basename | replace('.j2', '') }}"
    owner: slurm
    group: slurm
    mode: 0555
  loop: '{{ slurm_prolog_scripts }}'
  when: "'compute' in slurm_host_roles"

- name: Template epilog files
  ansible.builtin.template:
    src: '{{ item }}'
    dest: "/usr/local/libexec/slurm/epilog.d/{{ item | basename | replace('.j2', '') }}"
    owner: slurm
    group: slurm
    mode: 0555
  loop: '{{ slurm_epilog_scripts }}'
  when: "'compute' in slurm_host_roles"

- name: Configure slurmd unit file sysconfig
  ansible.builtin.template:
    src: 'slurmd_sysconfig.j2'
    dest: /etc/sysconfig/slurmd
    owner: root
    group: root
    mode: 0644
  when: "'compute' in slurm_host_roles"
  notify:
    - Restart slurmd

- name: Template gres.conf
  ansible.builtin.template:
    src: '{{ slurm_gres_conf_template }}'
    dest: /etc/slurm/gres.conf
    owner: root
    group: root
    mode: 0644
    backup: true
  when: "'slurmctld' in slurm_host_roles"
  notify:
    - Restart munge
    - Restart slurmctld
    - Restart slurmd

- name: Template cgroup.conf
  ansible.builtin.template:
    src: '{{ slurm_cgroup_conf_template }}'
    dest: /etc/slurm/cgroup.conf
    owner: root
    group: root
    mode: 0644
    backup: true
  when: "'slurmctld' in slurm_host_roles"
  notify:
    - Restart munge
    - Restart slurmctld
    - Restart slurmd

- name: Template topology.conf
  ansible.builtin.template:
    src: '{{ slurm_topology_conf_template }}'
    dest: /etc/slurm/topology.conf
    owner: root
    group: root
    mode: 0644
    backup: true
  when: "'slurmctld' in slurm_host_roles"
  notify:
    - Restart munge
    - Restart slurmctld
    - Restart slurmd

- name: Template cli_filter.lua-plugin
  ansible.builtin.template:
    src: '{{ slurm_cli_filter_template }}'
    dest: /etc/slurm/cli_filter.lua
    owner: root
    group: root
    mode: 0644
    backup: true
  when: "'slurmctld' in slurm_host_roles"
  notify:
    - Restart munge
    - Restart slurmctld
    - Restart slurmd

- name: Template job_submit.lua-plugin
  ansible.builtin.template:
    src: '{{ slurm_job_submit_template }}'
    dest: /etc/slurm/job_submit.lua
    owner: root
    group: root
    mode: 0644
    backup: true
  when: "'slurmctld' in slurm_host_roles"
  notify:
    - Restart munge
    - Restart slurmctld
    - Restart slurmd

- name: Enable slurmd
  ansible.builtin.systemd_service:
    name: slurmd
    enabled: true
    no_block: true
  retries: 3
  delay: 10
  when: "'compute' in slurm_host_roles"

- name: Configure pam system-auth
  ansible.builtin.lineinfile:
    path: /etc/pam.d/system-auth
    line: '{{ slurm_pam_adopt_setting }}'
    insertbefore: '^account.*required.*pam_access.so.*'
  when: "'compute' in slurm_host_roles and slurm_enable_pam_slurm_adopt"

- name: Configure pam slurm module
  ansible.builtin.template:
    src: 'slurm_pam.j2'
    dest: /etc/pam.d/slurm
    owner: root
    group: root
    mode: 0644
  when: "'compute' in slurm_host_roles and slurm_enable_pam_slurm"

- name: Template profile.d scripts for configless setup
  ansible.builtin.template:
    src: '{{ item }}'
    dest: "/etc/profile.d/{{ item | basename | replace('.j2', '') }}"
    owner: root
    group: root
    mode: 0644
    backup: true
  when: "('submit' in slurm_host_roles or 'compute' in slurm_host_roles) and slurm_enable_configless_profiled"
  loop:
    - 'slurm_conf.sh.j2'
    - 'slurm_conf.csh.j2'

- name: Add a SLURM_CONF_SERVER line to /etc/security/pam_env.conf for configless setup
  ansible.builtin.lineinfile:
    path: /etc/security/pam_env.conf
    line: 'SLURM_CONF_SERVER DEFAULT="{{ slurmctld_hosts }}"'
    search_string: 'SLURM_CONF_SERVER'
    state: present
  when: "('submit' in slurm_host_roles or 'compute' in slurm_host_roles) and slurm_enable_configless_profiled"

- name: Run handlers
  ansible.builtin.meta: flush_handlers
