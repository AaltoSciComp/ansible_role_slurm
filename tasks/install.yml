---

- name: add slurm unix group
  group:
    name: slurm
    system: no
    state: present
    gid: "{{ slurm_user_gid|default(slurm_user_uid) }}"
  register: reg_slurm_unixgroup
  when: slurm_user_uid is defined

- name: add slurm unix user
  user:
    name: slurm
    shell: /sbin/nologin
    createhome: no
    system: no
    append: yes
    group: slurm
    state: present
    uid: "{{ slurm_user_uid }}"
  register: reg_slurm_unixuser
  when: slurm_user_uid is defined

- name: add munge unix group
  group:
    name: munge
    system: no
    state: present
    gid: "{{ slurm_munge_user_gid|default(slurm_munge_user_uid) }}"
  register: reg_munge_unixgroup
  when: slurm_munge_user_uid is defined

- name: add munge unix user
  user:
    name: munge
    shell: /sbin/nologin
    createhome: no
    system: no
    append: yes
    group: munge
    state: present
    uid: "{{ slurm_munge_user_uid }}"
  register: reg_munge_unixuser
  when: slurm_munge_user_uid is defined


- name: Add slurm repository
  ansible.builtin.yum_repository:
    name: '{{ slurm_repo_name }}'
    description: Slurm repository (managed by ansible_role_slurm)
    baseurl: '{{ slurm_repo_baseurl }}'
    gpgcheck: no
  when: slurm_repo_name | length > 0

- name: Install slurm
  ansible.builtin.dnf:
    name: "{{ slurm_packages['slurm'] }}"
    state: present
    update_cache: yes
  notify:
    - Start munge

- name: Install slurmd
  ansible.builtin.package:
    name: "{{ slurm_packages['compute'] }}"
    state: present
  when: "'compute' in slurm_host_roles"
  notify:
    - Start slurmd

- name: Install slurmdbd
  ansible.builtin.package:
    name: "{{ slurm_packages['slurmdbd'] }}"
    state: present
  when: "'slurmdbd' in slurm_host_roles"
  notify:
    - Start mysql
    - Initialize mysql
    - Start slurmdbd

- name: Install slurmctld
  ansible.builtin.dnf:
    name: "{{ slurm_packages['slurmctld'] }}"
    state: present
    update_cache: yes
  when: "'slurmctld' in slurm_host_roles"
  notify:
    - Start slurmctld
    - Add slurm cluster

- name: Create slurm log directory
  ansible.builtin.file:
    path: '{{ slurm_log_dir }}'
    state: directory
    owner: slurm
    group: slurm
    mode: '0750'

- name: Create slurm configuration directory
  ansible.builtin.file:
    path: /etc/slurm
    state: directory
    owner: root
    group: root
    mode: '0755'

- name: Create slurm state directory
  ansible.builtin.file:
    path: '{{ slurm_state_save_location }}'
    state: directory
    owner: slurm
    group: slurm
    mode: '0755'
  when: "'slurmctld' in slurm_host_roles"

- name: Install slurm-tool
  when: slurm_tool_install and ( 'slurmctld' in slurm_host_roles or 'submit' in slurm_host_roles or 'compute' in slurm_host_roles )
  block:
    - name: Install git for slurm_tool installation
      ansible.builtin.dnf:
        name: git
        state: present
    - name: Remove slurm_tool temporary folder /tmp/slurm_tool
      ansible.builtin.file:
        path: "/tmp/slurm_tool"
        state: absent
    - name: Clone slurm_tool
      ansible.builtin.git:
        repo: "{{ slurm_tool_repo }}"
        dest: /tmp/slurm_tool
        version: "{{ slurm_tool_version }}"
    - name: Copy slurm tool script
      ansible.builtin.copy:
        src: /tmp/slurm_tool/slurm
        dest: /usr/local/bin/slurm
        remote_src: true
        owner: root
        group: root
        mode: '0755'
