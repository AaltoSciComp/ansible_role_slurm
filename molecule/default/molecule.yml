---
dependency:
  name: galaxy
driver:
  name: docker
platforms:
  - name: builder
    image: rockylinux/rockylinux:9-ubi-init
    pre_build_image: true
    privileged: True
    volume_mounts:
      - "/sys/fs/cgroup:/sys/fs/cgroup:rw"
    command: "/sbin/init"
    networks:
      - name: slurm_network
  - name: controller1
    image: rockylinux/rockylinux:9-ubi-init
    pre_build_image: true
    privileged: True
    volume_mounts:
      - "/sys/fs/cgroup:/sys/fs/cgroup:rw"
    command: "/sbin/init"
    networks:
      - name: slurm_network
  - name: controller2
    image: rockylinux/rockylinux:9-ubi-init
    pre_build_image: true
    privileged: True
    volume_mounts:
      - "/sys/fs/cgroup:/sys/fs/cgroup:rw"
    command: "/sbin/init"
    networks:
      - name: slurm_network
  - name: database
    image: rockylinux/rockylinux:9-ubi-init
    pre_build_image: true
    privileged: True
    volume_mounts:
      - "/sys/fs/cgroup:/sys/fs/cgroup:rw"
    command: "/sbin/init"
    networks:
      - name: slurm_network
  - name: restapi
    image: rockylinux/rockylinux:9-ubi-init
    pre_build_image: true
    privileged: True
    volume_mounts:
      - "/sys/fs/cgroup:/sys/fs/cgroup:rw"
    command: "/sbin/init"
    networks:
      - name: slurm_network
  - name: compute1
    image: rockylinux/rockylinux:9-ubi-init
    pre_build_image: true
    privileged: True
    volume_mounts:
      - "/sys/fs/cgroup:/sys/fs/cgroup:rw"
    command: "/sbin/init"
    networks:
      - name: slurm_network
  - name: compute2
    image: rockylinux/rockylinux:9-ubi-init
    pre_build_image: true
    privileged: True
    volume_mounts:
      - "/sys/fs/cgroup:/sys/fs/cgroup:rw"
    command: "/sbin/init"
    networks:
      - name: slurm_network
  - name: submit
    image: rockylinux/rockylinux:9-ubi-init
    pre_build_image: true
    privileged: True
    volume_mounts:
      - "/sys/fs/cgroup:/sys/fs/cgroup:rw"
    command: "/sbin/init"
    networks:
      - name: slurm_network
provisioner:
  name: ansible
  config_options:
    defaults:
      remote_tmp: /tmp
  inventory:
    group_vars:
      all:
        slurm_build_rpm: true
        slurm_createrepo: true
        slurm_create_mungekey: true
        slurm_repo_baseurl: "http://builder/slurm_repo/"
        slurm_rpm_fetchdir: "/tmp/slurm"
        slurm_mungekey_path: "/tmp/munge.key"
        slurmctld_hosts: controller1,controller2
        slurmdbd_host: database
    host_vars:
      builder:
        slurm_host_roles:
          - build_host
          - repo_host
      controller1:
        slurm_host_roles:
          - slurmctld
      controller2:
        slurm_host_roles:
          - slurmctld
      database:
        slurm_host_roles:
          - slurmdbd
      restapi:
        slurm_host_roles:
          - slurmrestd
      compute1:
        slurm_host_roles:
          - compute
      compute2:
        slurm_host_roles:
          - compute
      submit:
        slurm_host_roles:
          - submit
verifier:
  name: ansible
